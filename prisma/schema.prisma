generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ربط مع جدول players الموجود في QBCore
model Player {
  id            String          @id @map("citizenid")
  license       String?
  charinfo      Json?           // يحتوي على firstname و lastname وغيرها
  job           Json?           // يحتوي على name و grade
  money         Json?
  metadata      Json?
  position      String?         @db.Text
  reports       PoliceReport[]  @relation("OfficerReports")
  subjectReports PoliceReport[] @relation("SubjectReports")
  warrants      PoliceWarrant[] @relation("OfficerWarrants")
  subjectWarrants PoliceWarrant[] @relation("SubjectWarrants")
  vehicles      PlayerVehicle[] // العلاقة مع المركبات في QBCore

  @@map("players")
}

// جدول تقارير الشرطة
model PoliceReport {
  id                Int      @id @default(autoincrement())
  title             String
  description       String   @db.Text
  officer_citizenid String
  officer           Player   @relation("OfficerReports", fields: [officer_citizenid], references: [id])
  subject_citizenid String
  subject           Player   @relation("SubjectReports", fields: [subject_citizenid], references: [id])
  charges           String   @db.Text
  status            String   @default("active")
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@map("police_reports")
}

// جدول أوامر القبض
model PoliceWarrant {
  id                Int       @id @default(autoincrement())
  reason            String
  description       String    @db.Text
  officer_citizenid String
  officer           Player    @relation("OfficerWarrants", fields: [officer_citizenid], references: [id])
  subject_citizenid String
  subject           Player    @relation("SubjectWarrants", fields: [subject_citizenid], references: [id])
  status            String    @default("active")
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  expires_at        DateTime?

  @@map("police_warrants")
}

// جدول المخالفات المتاحة
model PoliceCharge {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @db.Text
  fine        Int
  jail_time   Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("police_charges")
}

// جدول صلاحيات الوصول للنظام
model PoliceCadAccess {
  id         Int      @id @default(autoincrement())
  job        String   @unique
  min_grade  Int      @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("police_cad_access")
}

// ربط مع جدول المركبات في QBCore (للبحث عن المركبات)
model PlayerVehicle {
  id          Int       @id @default(autoincrement())
  license     String?
  citizenid   String
  vehicle     String?
  hash        String?
  mods        String?   @db.Text
  metadata    String?   @db.Text
  state       Int?      @default(0)
  player      Player    @relation(fields: [citizenid], references: [id])
  plate       String?
  garage      String?
  fuel        Int?      @default(100)
  engine      Float?    @default(1000.0)
  body        Float?    @default(1000.0)
  
  @@map("player_vehicles")
}

// ربط مع جدول سجل الدخول إذا كنت تحتاج لتتبع تسجيلات الدخول
model LoginLog {
  id         Int      @id @default(autoincrement())
  citizenid  String
  time       DateTime @default(now())
  ip_address String?
  success    Boolean  @default(true)
  reason     String?

  @@map("police_login_logs")
}